// gradle task and plugin configuration
buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'com.jfrog.bintray'

    // global settings
    group 'io.cloudwall'
    version '0.1.0'
    sourceCompatibility = JavaVersion.VERSION_1_10
    targetCompatibility = JavaVersion.VERSION_1_10
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url 'https://dl.bintray.com/io-cloudwall/cloudwall-maven' }
    }

    dependencies {
        testCompile 'junit:junit:4.12',
                'org.hamcrest:hamcrest-library:1.4-atlassian-1',
                'org.mockito:mockito-core:2.21.0'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    compileJava {
        doFirst {
            options.compilerArgs = [
                    '--module-path', classpath.asPath,
            ]
            classpath = files()
        }
    }

    artifacts {
        archives jar
        archives sourcesJar
    }

    task installModules(type: Copy) {
        into "$buildDir/modules"
        from configurations.runtime
        from jar
    }
}

compileTestJava {
    doFirst {
        options.compilerArgs = [
            '--module-path', classpath.asPath,
            '--add-modules', 'junit',
            '--add-reads', "wisp.boot=junit",
            '--patch-module', "wisp.boot=" + files(sourceSets.test.java.srcDirs).asPath,
        ]
        classpath = files()
    }
}

task createBootImage(type: Copy) {
    dependsOn 'wisp-boot:installModules'
    into "$buildDir/image/boot"
    exclude "jansi*.jar"
    exclude "log4j*.jar"
    exclude "slf4j*.jar"
    from "wisp-boot/build/modules"
}

task createLoggerImage(type: Copy) {
    dependsOn 'wisp-logger:installModules'

    into "$buildDir/image/modules/wisp.logger"
    exclude "args4j*.jar"
    exclude "config*.jar"
    exclude "wisp-api*.jar"
    from "wisp-logger/build/modules"
}

task createWebsocketImage(type: Copy) {
    dependsOn 'wisp-websocket:installModules'

    into "$buildDir/image/modules/wisp.websocket"
    exclude "args4j*.jar"
    exclude "config*.jar"
    exclude "jansi*.jar"
    exclude "log4j*.jar"
    exclude "slf4j*.jar"
    exclude "wisp-api*.jar"
    exclude "wisp-logger*.jar"
    from "wisp-websocket/build/modules"
}

task createWebsocketEchoImage(type: Copy) {
    dependsOn 'wisp-websocket-echo:installModules'

    into "$buildDir/image/modules/wisp.websocket.echo"
    include "wisp-websocket-echo*.jar"
    from "wisp-websocket-echo/build/modules"
}

task createImage {
    dependsOn 'createBootImage'
    dependsOn 'createLoggerImage'
    dependsOn 'createWebsocketImage'
    dependsOn 'createWebsocketEchoImage'
}

install.dependsOn createBootImage
install.dependsOn createLoggerImage
install.dependsOn createWebsocketImage
install.dependsOn createWebsocketEchoImage

task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
   	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	configurations = ['archives']
	pkg {
		repo = 'cloudwall-maven'
		name = 'wisp'
		userOrg = 'io-cloudwall'
        desc = 'Cloud Wall Websocket Server'
        websiteUrl = 'https://github.com/cloudwall/wisp'
        issueTrackerUrl = 'https://github.com/cloudwall/wisp/issues'
		vcsUrl = 'https://github.com/cloudwall/wisp.git'
        licenses = ['Apache-2.0']

        githubRepo = 'cloudwall/wisp'
        githubReleaseNotesFile = 'README.md'

        version {
            name = project.version
            vcsTag = "v$project.version"
            attributes = ['gradle-plugin': "io.cloudwall:wisp:$project.version"]
        }
	}
}

project(':wisp-api') {
    dependencies {
        compile 'com.typesafe:config:1.3.3'
    }
}

project(':wisp-logger') {
    dependencies {
        compile project(':wisp-api')
        compile 'org.apache.logging.log4j:log4j-api:2.11.1',
                'org.apache.logging.log4j:log4j-core:2.11.1',
                'org.apache.logging.log4j:log4j-slf4j-impl:2.11.1',
                'org.fusesource.jansi:jansi:1.17.1'
    }
}

project(':wisp-boot') {
    dependencies {
        compile project(':wisp-api')
        compile 'args4j:args4j:2.33',
                'com.google.code.findbugs:jsr305:3.0.2',
                'com.google.guava:guava:25.1-jre',
                'com.typesafe:config:1.3.3',
                'io.cloudwall:cloudwall-graph:1.0.0'
    }
}

project(':wisp-websocket') {
    dependencies {
        compile project(':wisp-api')
        compile project(':wisp-logger')
        compile 'args4j:args4j:2.33',
                'com.typesafe:config:1.3.3',
                'io.netty:netty-codec-http:4.1.28.Final',
                'io.netty:netty-handler:4.1.28.Final',
                'org.bouncycastle:bcpkix-jdk15on:1.58'
    }
}

project (':wisp-websocket-echo') {
    dependencies {
        compile project (':wisp-websocket')
    }
}
